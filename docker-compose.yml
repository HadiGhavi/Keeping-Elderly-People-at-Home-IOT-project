version: '3.9'

services:
  catalog:
    build:
      context: ./Microservices/Catalog
    container_name: catalog_service
    ports:
      - "5001:5001"
    volumes:
      - ./Microservices/Catalog/resource_catalog.json:/app/resource_catalog.json
    restart: always
    networks:
      - iot-network

  database_adapter:
    build: ./Microservices/DatabaseAdapter
    container_name: database_adapter
    ports:
      - "3000:3000"
    environment:
      - INFLUXDB_HOST=https://eu-central-1-1.aws.cloud2.influxdata.com
      - INFLUXDB_TOKEN=WaCTN7nEqIMjNSsl-Yzry1iz6Os2F4xskPWrdrA5JQe49JmxT0MiUtOgvAHtz94cTkVolVrcplxYXfaYxqPf-g==
      - INFLUXDB_ORG=Dev Team
      - INFLUXDB_BUCKET=iot_health
    depends_on:
      - catalog
    restart: always
    networks:
      - iot-network

  data_ingestion:
    build:
      context: .
      dockerfile: Microservices/DataIngestion/Dockerfile
    container_name: data_ingestion_service
    ports:
      - "2500:2500"
    volumes:
      - ./Microservices/DataIngestion:/app/Microservices/DataIngestion
      - ./ClassificationAlgorithm:/app/ClassificationAlgorithm
    environment:
      - BASE_DIR=/app/ClassificationAlgorithm
    depends_on:
      - catalog
      - notification
      - database_adapter
    restart: always
    networks:
      - iot-network

  monitor:
    build:
      context: .
      dockerfile: Microservices/Monitor/Dockerfile
    container_name: monitor_service
    ports:
      - "3500:3500"
    depends_on:
      - catalog
    restart: always
    networks:
      - iot-network

  notification:
    build:
      context: ./Microservices/Notification
    container_name: notification_service
    ports:
      - "1500:1500"
    depends_on:
      - catalog
    restart: always
    networks:
      - iot-network

  admin_panel:
    build:
      context: .
      dockerfile: Microservices/Report/Dockerfile
    container_name: admin_panel_service
    ports:
      - "9000:9000"
    depends_on:
      - catalog
      - data_ingestion
    restart: always
    networks:
      - iot-network

  telegram_bot:
    build:
      context: ./Microservices/TelegramBot
    container_name: telegram_bot_service
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - catalog
    networks:
      - iot-network

networks:
  iot-network:
    driver: bridge